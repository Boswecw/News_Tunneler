import { createSignal, For } from "solid-js";

interface FAQItem {
  question: string;
  answer: string;
  category: string;
}

const faqData: FAQItem[] = [
  // General Questions
  {
    category: "General",
    question: "What is News Tunneler?",
    answer: "News Tunneler is an AI-powered trading analytics platform that aggregates financial news from multiple sources, analyzes them using machine learning, and provides actionable trading signals. It combines real-time market data, sentiment analysis, and predictive modeling to help identify high-conviction trading opportunities."
  },
  {
    category: "General",
    question: "How does the scoring system work?",
    answer: "Each article is scored based on five factors: Catalyst (market-moving potential), Novelty (uniqueness), Credibility (source reliability), Sentiment (bullish/bearish tone), and Liquidity (tradability). These scores are weighted and combined into a total score that determines if an article becomes an alert."
  },
  {
    category: "General",
    question: "What makes a 'High-Conviction' signal?",
    answer: "High-Conviction signals (score â‰¥70) represent the strongest opportunities identified by our ML model. These combine strong fundamental catalysts, positive sentiment, high source credibility, and favorable technical patterns. They're designed for higher-confidence trades with larger position sizes."
  },

  // Live Charts & Predictions
  {
    category: "Live Charts",
    question: "How do the Live Charts work?",
    answer: "During market hours (9:30 AM - 4:00 PM ET), charts display real-time streaming price and sentiment data updated every minute. After hours, they automatically switch to showing ML-generated predictions for the next trading session based on recent signals and sentiment."
  },
  {
    category: "Live Charts",
    question: "What are the Buy/Sell signals on prediction charts?",
    answer: "The Buy signal indicates the predicted optimal entry point (lowest price) during the next trading session, while the Sell signal shows the predicted optimal exit point (highest price). These are generated by analyzing historical intraday patterns and current ML signal strength."
  },
  {
    category: "Live Charts",
    question: "How accurate are the predictions?",
    answer: "Prediction accuracy improves over time as the model learns from labeled data. Initially, predictions are based on signal strength and sentiment. As more trading sessions are labeled with actual outcomes, the model refines its understanding of which patterns actually predict market-beating returns."
  },

  // ML & Signals
  {
    category: "ML & Signals",
    question: "How does the machine learning model work?",
    answer: "The model uses a combination of sentiment analysis, technical indicators, and historical price patterns. It learns which combinations of news signals, sentiment scores, and market conditions have historically led to profitable trades. The model continuously improves as it processes more labeled trading outcomes."
  },
  {
    category: "ML & Signals",
    question: "What are the three signal categories?",
    answer: "High-Conviction (70-100): Strongest signals for larger positions. Opportunity (50-69): Moderate signals for standard positions. Watch (30-49): Weaker signals to monitor or use for smaller speculative positions. Signals below 30 are typically filtered out."
  },
  {
    category: "ML & Signals",
    question: "How often are signals updated?",
    answer: "News articles are fetched every 30 minutes from all enabled RSS sources. ML analysis runs automatically 4 times daily (12 AM, 6 AM, 12 PM, 6 PM ET) to analyze high-scoring articles and generate trading signals. Real-time price and sentiment data updates every minute during market hours."
  },

  // Data Sources
  {
    category: "Data Sources",
    question: "What news sources does News Tunneler monitor?",
    answer: "The platform monitors 20+ premium financial news sources including SEC EDGAR filings, Financial Times, Reuters, Bloomberg, Wall Street Journal, MarketWatch, Seeking Alpha, and specialized sources like FDA.gov and EIA.gov. You can enable/disable sources in the Sources page."
  },
  {
    category: "Data Sources",
    question: "Can I add custom RSS feeds?",
    answer: "Yes! Go to the Sources page and use the 'Add New Source' form. You can add any RSS or Atom feed URL. The system will automatically parse and score articles from your custom sources using the same ML analysis pipeline."
  },
  {
    category: "Data Sources",
    question: "Where does the price data come from?",
    answer: "Real-time and historical price data comes from yfinance (Yahoo Finance), which provides reliable, free market data. For intraday streaming during market hours, we use 1-minute interval data. Historical data is used for backtesting and prediction model training."
  },

  // Features & Usage
  {
    category: "Features",
    question: "What is the Opportunities page?",
    answer: "The Opportunities page shows all stocks with recent ML signals, ranked by signal strength. Each opportunity displays the signal score, label (High-Conviction/Opportunity/Watch), predicted return, sentiment analysis, recent news articles, and an AI-generated trading plan with entry/exit strategies."
  },
  {
    category: "Features",
    question: "How do I interpret the sentiment charts?",
    answer: "Sentiment charts (green) show aggregated sentiment scores from recent news articles about a stock. Positive values indicate bullish sentiment, negative values indicate bearish sentiment. The chart also displays the current ML signal score and label for context."
  },
  {
    category: "Features",
    question: "What are the email digests?",
    answer: "The system sends automated email digests twice daily: Morning Digest (11 AM ET) with overnight developments and top opportunities, and Evening Digest (5 PM ET) with end-of-day analysis and next-day predictions. Configure email settings in the Settings page."
  },

  // Technical & Setup
  {
    category: "Technical",
    question: "What technologies power News Tunneler?",
    answer: "Backend: Python with FastAPI, SQLAlchemy, APScheduler, and OpenAI GPT for LLM analysis. Frontend: SolidJS with TypeScript, TailwindCSS, and ApexCharts. Data: SQLite database, yfinance for market data, and real-time SSE/WebSocket streaming."
  },
  {
    category: "Technical",
    question: "How do I run News Tunneler locally?",
    answer: "Clone the repo, set up the backend (Python 3.12+, create venv, install requirements, configure .env with API keys), run database migrations with Alembic, start the backend with uvicorn, then set up the frontend (Bun, install dependencies) and run the dev server. See README for detailed instructions."
  },
  {
    category: "Technical",
    question: "What API keys do I need?",
    answer: "Required: OpenAI API key (for LLM analysis). Optional: Email SMTP credentials (for digest emails), Polygon.io API key (for enhanced market data). Configure all keys in the backend/.env file. The system will work with just OpenAI, but some features require additional keys."
  },

  // Trading & Strategy
  {
    category: "Trading",
    question: "Is this financial advice?",
    answer: "No. News Tunneler is an educational tool for analyzing market news and learning about algorithmic trading strategies. All signals, predictions, and trading plans are for informational purposes only. Always do your own research and consult with a licensed financial advisor before making investment decisions."
  },
  {
    category: "Trading",
    question: "What trading strategies does the AI suggest?",
    answer: "The AI generates strategy suggestions based on signal strength and market conditions: Momentum (quick moves on strong catalysts), Swing (multi-day holds on moderate signals), DCA (dollar-cost averaging for high conviction), Pairs (relative value trades), or Avoid (when risks outweigh potential)."
  },
  {
    category: "Trading",
    question: "How should I use the backtesting feature?",
    answer: "Backtesting shows how a simple strategy (buy at open, sell at close on signal days) would have performed historically. Use it to validate signal quality and understand typical returns/drawdowns. Remember: past performance doesn't guarantee future results, and real trading involves slippage, fees, and execution challenges."
  }
];

export default function FAQ() {
  const [openIndex, setOpenIndex] = createSignal<number | null>(null);
  const [selectedCategory, setSelectedCategory] = createSignal<string>("All");

  const categories = ["All", ...Array.from(new Set(faqData.map(item => item.category)))];

  const filteredFAQs = () => {
    if (selectedCategory() === "All") return faqData;
    return faqData.filter(item => item.category === selectedCategory());
  };

  const toggleFAQ = (index: number) => {
    setOpenIndex(openIndex() === index ? null : index);
  };

  return (
    <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 dark:from-gray-900 dark:via-slate-900 dark:to-gray-900">
      <div class="container mx-auto px-4 py-8 max-w-5xl">
        {/* Header */}
        <div class="mb-8">
          <div class="flex items-center gap-3 mb-3">
            <div class="p-2 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-lg shadow-lg">
              <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div>
              <h1 class="text-4xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-400 dark:to-indigo-400 bg-clip-text text-transparent">
                Frequently Asked Questions
              </h1>
              <p class="text-gray-600 dark:text-gray-400 mt-1">
                Everything you need to know about News Tunneler
              </p>
            </div>
          </div>
        </div>

        {/* Category Filter */}
        <div class="mb-6 backdrop-blur-sm bg-white/70 dark:bg-gray-800/70 rounded-2xl shadow-xl border border-gray-200/50 dark:border-gray-700/50 p-4">
          <div class="flex flex-wrap gap-2">
            <For each={categories}>
              {(category) => (
                <button
                  onClick={() => setSelectedCategory(category)}
                  class={`px-4 py-2 rounded-xl text-sm font-medium transition-all duration-200 ${
                    selectedCategory() === category
                      ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-lg'
                      : 'bg-white/60 dark:bg-gray-700/60 text-gray-700 dark:text-gray-300 hover:bg-white dark:hover:bg-gray-700'
                  }`}
                >
                  {category}
                </button>
              )}
            </For>
          </div>
        </div>

        {/* FAQ Items */}
        <div class="space-y-4">
          <For each={filteredFAQs()}>
            {(item, index) => (
              <div class="backdrop-blur-sm bg-white/70 dark:bg-gray-800/70 rounded-2xl shadow-xl border border-gray-200/50 dark:border-gray-700/50 overflow-hidden hover:shadow-2xl transition-all duration-300">
                <button
                  onClick={() => toggleFAQ(index())}
                  class="w-full px-6 py-4 flex items-center justify-between text-left hover:bg-white/40 dark:hover:bg-gray-700/40 transition-colors"
                >
                  <div class="flex-1">
                    <div class="flex items-center gap-3 mb-1">
                      <span class="px-3 py-1 text-xs font-semibold rounded-full bg-gradient-to-r from-blue-500/20 to-indigo-500/20 text-blue-700 dark:text-blue-300 border border-blue-500/30">
                        {item.category}
                      </span>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200">
                      {item.question}
                    </h3>
                  </div>
                  <svg
                    class={`w-6 h-6 text-gray-500 dark:text-gray-400 transition-transform duration-200 ${
                      openIndex() === index() ? 'transform rotate-180' : ''
                    }`}
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </button>
                
                {openIndex() === index() && (
                  <div class="px-6 pb-4 pt-2 border-t border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-br from-blue-50/30 to-indigo-50/30 dark:from-blue-900/10 dark:to-indigo-900/10">
                    <p class="text-gray-700 dark:text-gray-300 leading-relaxed">
                      {item.answer}
                    </p>
                  </div>
                )}
              </div>
            )}
          </For>
        </div>

        {/* Help Section */}
        <div class="mt-8 backdrop-blur-sm bg-gradient-to-br from-blue-50/80 to-indigo-50/80 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-2xl border border-blue-200/50 dark:border-blue-700/50 p-6 shadow-lg">
          <div class="flex items-start gap-4">
            <div class="flex-shrink-0 w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2">
                Still have questions?
              </h3>
              <p class="text-gray-600 dark:text-gray-400 mb-4">
                Check out the project documentation on GitHub or explore the different pages to learn more about specific features.
              </p>
              <div class="flex gap-3">
                <a
                  href="https://github.com/Boswecw/News_Tunneler"
                  target="_blank"
                  rel="noopener noreferrer"
                  class="px-4 py-2 rounded-xl bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium hover:shadow-lg transition-all duration-200"
                >
                  View on GitHub
                </a>
                <a
                  href="/opportunities"
                  class="px-4 py-2 rounded-xl bg-white/60 dark:bg-gray-700/60 text-gray-700 dark:text-gray-300 font-medium hover:bg-white dark:hover:bg-gray-700 transition-all duration-200"
                >
                  Explore Opportunities
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

